// I built this MVC from the command "dotnet new mvc --framework net5.0
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder; //in lesson plan
using Microsoft.AspNetCore.Hosting; //in lesson plan
using Microsoft.AspNetCore.Http; // added, not autogenerated, in lesson plan
using Microsoft.AspNetCore.HttpsPolicy;
using Microsoft.Extensions.Configuration; // in lesson plan
using Microsoft.Extensions.DependencyInjection; // in lesson plan
using Microsoft.Extensions.Hosting;

//These import built-in .NET namespaces that are required for creating a web application. They can help us construct HTTP requests, configure our project, and ensure necessary built-in functionality is present in the correct areas.

namespace CMMS //t's standard practice to use a namespace that reflects the name of the project.
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddControllersWithViews();
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            else
            {
                app.UseExceptionHandler("/Home/Error");
                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
                app.UseHsts();
            }
            app.UseHttpsRedirection();
            app.UseStaticFiles();

            app.UseRouting();

            app.UseAuthorization();

            app.UseEndpoints(endpoints =>
            {
                endpoints.MapControllerRoute(
                    name: "default",
                    pattern: "{controller=Home}/{action=Index}/{id?}");
            });
        }
    }
}
